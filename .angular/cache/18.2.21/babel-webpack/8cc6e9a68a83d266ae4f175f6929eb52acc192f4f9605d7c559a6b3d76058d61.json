{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let SignupComponent = /*#__PURE__*/(() => {\n  class SignupComponent {\n    http;\n    router;\n    signupData = {\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n    isLoading = false;\n    // API Configuration - Replace with your hosted API URL\n    apiUrl = 'https://your-hosted-api.com'; // Replace with your actual hosted API URL\n    registerEndpoint = '/api/register'; // Replace with your actual register endpoint\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n    }\n    onSubmit() {\n      if (this.signupData.password !== this.signupData.confirmPassword) {\n        alert('Passwords do not match!');\n        return;\n      }\n      if (!this.isValidEmail(this.signupData.email)) {\n        alert('Please enter a valid email address!');\n        return;\n      }\n      if (this.signupData.password.length < 6) {\n        alert('Password must be at least 6 characters long!');\n        return;\n      }\n      this.createAccount();\n    }\n    createAccount() {\n      this.isLoading = true;\n      // Prepare data for your hosted API\n      const accountData = {\n        name: this.signupData.fullName,\n        // Adjust field names based on your API\n        email: this.signupData.email,\n        password: this.signupData.password\n        // Add any additional fields your hosted API requires\n        // Example: firstName: this.signupData.fullName.split(' ')[0],\n        // lastName: this.signupData.fullName.split(' ')[1] || ''\n      };\n      // Set HTTP headers for your hosted API\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        // Add any required headers for your hosted API\n        // 'Authorization': 'Bearer your-api-key',\n        // 'X-API-Key': 'your-api-key'\n      });\n      console.log('Sending registration request to:', `${this.apiUrl}${this.registerEndpoint}`);\n      console.log('Request payload:', accountData);\n      // Make API call to your hosted API\n      this.http.post(`${this.apiUrl}${this.registerEndpoint}`, accountData, {\n        headers\n      }).subscribe({\n        next: response => {\n          console.log('Account created successfully:', response);\n          // Handle successful response based on your API structure\n          if (response.success || response.status === 'success' || response.message) {\n            alert(response.message || 'Account created successfully! Please check your email for verification.');\n            // Save token if your API returns one\n            if (response.token || response.access_token) {\n              localStorage.setItem('auth_token', response.token || response.access_token);\n            }\n            // Save user data if provided\n            if (response.user || response.data) {\n              localStorage.setItem('user_data', JSON.stringify(response.user || response.data));\n            }\n            // Redirect to login page or dashboard\n            this.router.navigate(['/login']);\n          } else {\n            alert('Registration completed, but there might be an issue. Please try logging in.');\n          }\n          this.isLoading = false;\n        },\n        error: error => {\n          console.error('Error creating account:', error);\n          console.error('Error details:', error.error);\n          let errorMessage = 'Failed to create account. Please try again.';\n          // Handle different error responses from your hosted API\n          if (error.error && error.error.message) {\n            errorMessage = error.error.message;\n          } else if (error.error && typeof error.error === 'string') {\n            errorMessage = error.error;\n          } else if (error.message) {\n            errorMessage = error.message;\n          }\n          // Handle specific HTTP status codes\n          switch (error.status) {\n            case 400:\n              errorMessage = error.error?.message || 'Invalid input data. Please check your information.';\n              break;\n            case 401:\n              errorMessage = 'Unauthorized. Please check your API credentials.';\n              break;\n            case 409:\n            case 422:\n              errorMessage = error.error?.message || 'Email already exists or validation error.';\n              break;\n            case 429:\n              errorMessage = 'Too many requests. Please try again later.';\n              break;\n            case 500:\n              errorMessage = 'Server error. Please try again later.';\n              break;\n            case 0:\n              errorMessage = 'Network error. Please check your internet connection.';\n              break;\n          }\n          alert(errorMessage);\n          this.isLoading = false;\n        }\n      });\n    }\n    isValidEmail(email) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(email);\n    }\n    static ɵfac = function SignupComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SignupComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SignupComponent,\n      selectors: [[\"app-signup\"]],\n      decls: 49,\n      vars: 6,\n      consts: [[\"signupForm\", \"ngForm\"], [1, \"login-container\"], [1, \"login-illustration\"], [\"src\", \"assets/Deliverytruck.json\", \"background\", \"transparent\", \"speed\", \"1\", \"loop\", \"\", \"autoplay\", \"\", \"aria-hidden\", \"true\", 2, \"width\", \"100%\", \"max-width\", \"560px\", \"height\", \"auto\", \"display\", \"block\", \"margin\", \"0 auto\"], [1, \"login-card\"], [1, \"login-form-container\"], [1, \"subtitle\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"fullName\"], [\"type\", \"text\", \"id\", \"fullName\", \"name\", \"fullName\", \"placeholder\", \"Enter your full name\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"signupEmail\"], [\"type\", \"email\", \"id\", \"signupEmail\", \"name\", \"email\", \"placeholder\", \"Enter your email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"signupPassword\"], [\"type\", \"password\", \"id\", \"signupPassword\", \"name\", \"password\", \"placeholder\", \"Create a password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"placeholder\", \"Confirm your password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [1, \"options\"], [\"type\", \"checkbox\", \"required\", \"\"], [\"href\", \"#\", 1, \"terms-link\"], [\"type\", \"submit\", 1, \"login-btn\", 3, \"disabled\"], [1, \"divider\"], [1, \"social-login\"], [\"type\", \"button\", 1, \"google\"], [1, \"bi\", \"bi-google\"], [\"type\", \"button\", 1, \"facebook\"], [1, \"bi\", \"bi-facebook\"], [\"type\", \"button\", 1, \"twitter\"], [1, \"bi\", \"bi-twitter-x\"], [1, \"signup-text\"], [\"routerLink\", \"/login\"]],\n      template: function SignupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n          i0.ɵɵelement(2, \"lottie-player\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5)(5, \"h2\");\n          i0.ɵɵtext(6, \"Create Account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"p\", 6);\n          i0.ɵɵtext(8, \"Join us today! Fill in your details to get started.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"form\", 7, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_9_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"label\", 9);\n          i0.ɵɵtext(13, \"Full Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.signupData.fullName, $event) || (ctx.signupData.fullName = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 8)(16, \"label\", 11);\n          i0.ɵɵtext(17, \"Email Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"input\", 12);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_18_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.signupData.email, $event) || (ctx.signupData.email = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 13);\n          i0.ɵɵtext(21, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"input\", 14);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_22_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.signupData.password, $event) || (ctx.signupData.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"div\", 8)(24, \"label\", 15);\n          i0.ɵɵtext(25, \"Confirm Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"input\", 16);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_26_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.signupData.confirmPassword, $event) || (ctx.signupData.confirmPassword = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 17)(28, \"label\");\n          i0.ɵɵelement(29, \"input\", 18);\n          i0.ɵɵtext(30, \" I agree to the \");\n          i0.ɵɵelementStart(31, \"a\", 19);\n          i0.ɵɵtext(32, \"Terms & Conditions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(33, \"button\", 20);\n          i0.ɵɵtext(34);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 21)(36, \"span\");\n          i0.ɵɵtext(37, \"or sign up with\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"div\", 22)(39, \"button\", 23);\n          i0.ɵɵelement(40, \"i\", 24);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"button\", 25);\n          i0.ɵɵelement(42, \"i\", 26);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"button\", 27);\n          i0.ɵɵelement(44, \"i\", 28);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(45, \"div\", 29);\n          i0.ɵɵtext(46, \" Already have an account? \");\n          i0.ɵɵelementStart(47, \"a\", 30);\n          i0.ɵɵtext(48, \"Sign In\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          const signupForm_r2 = i0.ɵɵreference(10);\n          i0.ɵɵadvance(14);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.signupData.fullName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.signupData.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.signupData.password);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.signupData.confirmPassword);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"disabled\", signupForm_r2.invalid || ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Creating Account...\" : \"Create Account\", \" \");\n        }\n      },\n      dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"*[_ngcontent-%COMP%]{box-sizing:border-box;margin:0;padding:0}body[_ngcontent-%COMP%], html[_ngcontent-%COMP%]{font-family:Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,sans-serif;height:100%;background:linear-gradient(135deg,#667eea,#764ba2);background-attachment:fixed;overflow-x:hidden;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.login-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:100vh;padding:20px;gap:24px}.login-card[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;width:100%}.login-illustration[_ngcontent-%COMP%]{flex:1 1 60%;display:flex;align-items:center;justify-content:center;min-height:420px}.login-illustration[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;max-width:560px;border-radius:12px;box-shadow:0 12px 40px #00000026}.login-form-container[_ngcontent-%COMP%]{max-width:420px;width:100%;background:#fffffff2;backdrop-filter:blur(10px);border-radius:16px;padding:40px;border:1px solid rgba(255,255,255,.2);box-shadow:0 8px 32px #0000001a}.login-form-container.positioned[_ngcontent-%COMP%]{position:relative;left:var(--form-left, 0);right:var(--form-right, 12px);top:var(--form-top, 0);bottom:var(--form-bottom, 0)}[_ngcontent-%COMP%]:root{--signup-form-default-left: 0px;--signup-form-default-right: 12px;--signup-form-default-top: 0px;--signup-form-default-bottom: 0px}.login-form-container.positioned[_ngcontent-%COMP%]{left:var(--form-left, var(--signup-form-default-left));right:var(--form-right, var(--signup-form-default-right));top:var(--form-top, var(--signup-form-default-top));bottom:var(--form-bottom, var(--signup-form-default-bottom))}.left-offset-8[_ngcontent-%COMP%]{--form-left: 8px}.left-offset-12[_ngcontent-%COMP%]{--form-left: 12px}.left-offset-24[_ngcontent-%COMP%]{--form-left: 24px}.right-offset-8[_ngcontent-%COMP%]{--form-right: 8px}.right-offset-12[_ngcontent-%COMP%]{--form-right: 12px}.right-offset-24[_ngcontent-%COMP%]{--form-right: 24px}.top-offset-8[_ngcontent-%COMP%]{--form-top: 8px}.top-offset-16[_ngcontent-%COMP%]{--form-top: 16px}.bottom-offset-8[_ngcontent-%COMP%]{--form-bottom: 8px}.bottom-offset-16[_ngcontent-%COMP%]{--form-bottom: 16px}.nudge-left[_ngcontent-%COMP%]{--form-left: 12px}.nudge-right[_ngcontent-%COMP%]{--form-right: 12px}.login-form-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:28px;font-weight:700;color:#2c3e50;margin-bottom:8px;letter-spacing:-.5px}.subtitle[_ngcontent-%COMP%]{font-size:16px;color:#6c757d;margin-bottom:32px;font-weight:400}.form-group[_ngcontent-%COMP%]{margin-bottom:24px}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:14px;font-weight:600;display:block;margin-bottom:8px;color:#374151}.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:12px 16px;border:1px solid #d1d5db;border-radius:8px;font-size:16px;background:#ffffffe6;transition:all .2s ease}.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border-color:#667eea;background:#fff;box-shadow:0 0 0 3px #667eea1a;outline:none}.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder{color:#9ca3af}.options[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center;margin-bottom:24px}.options[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:14px;color:#374151;font-weight:500;cursor:pointer;display:flex;align-items:center}.options[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{margin-right:8px;width:16px;height:16px;accent-color:#667eea}.terms-link[_ngcontent-%COMP%]{color:#667eea;text-decoration:none;font-weight:600;transition:color .2s ease}.terms-link[_ngcontent-%COMP%]:hover{color:#5a67d8;text-decoration:underline}.login-btn[_ngcontent-%COMP%]{width:100%;padding:14px 24px;background:#667eea;border:none;border-radius:8px;color:#fff;font-weight:600;font-size:16px;cursor:pointer;transition:all .2s ease}.login-btn[_ngcontent-%COMP%]:hover{background:#5a67d8;transform:translateY(-1px);box-shadow:0 4px 12px #667eea4d}.login-btn[_ngcontent-%COMP%]:active{transform:translateY(0)}.login-btn[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed;transform:none}.divider[_ngcontent-%COMP%]{text-align:center;margin:24px 0;color:#6b7280;font-size:14px;position:relative}.divider[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{background:#ffffffe6;padding:0 16px;position:relative;z-index:1}.divider[_ngcontent-%COMP%]:before, .divider[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;height:1px;width:45%;background:#e5e7eb;top:50%;transform:translateY(-50%)}.divider[_ngcontent-%COMP%]:before{left:0}.divider[_ngcontent-%COMP%]:after{right:0}.social-login[_ngcontent-%COMP%]{display:flex;justify-content:center;gap:16px}.social-login[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:44px;height:44px;border:1px solid #e5e7eb;border-radius:8px;font-size:18px;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .2s ease;background:#ffffffe6}.social-login[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 12px #0000001a}.google[_ngcontent-%COMP%]{color:#db4437}.google[_ngcontent-%COMP%]:hover{background:#db4437;color:#fff;border-color:#db4437}.facebook[_ngcontent-%COMP%]{color:#4267b2}.facebook[_ngcontent-%COMP%]:hover{background:#4267b2;color:#fff;border-color:#4267b2}.twitter[_ngcontent-%COMP%]{color:#1da1f2}.twitter[_ngcontent-%COMP%]:hover{background:#1da1f2;color:#fff;border-color:#1da1f2}.signup-text[_ngcontent-%COMP%]{text-align:center;margin-top:32px;font-size:14px;color:#6b7280}.signup-text[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#667eea;font-weight:600;text-decoration:none;transition:color .2s ease;margin-left:4px}.signup-text[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#5a67d8;text-decoration:underline}@media (max-width: 900px){.login-container[_ngcontent-%COMP%]{padding:15px}.login-container[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch}.login-illustration[_ngcontent-%COMP%]{order:1;margin-bottom:30px}.login-card[_ngcontent-%COMP%]{justify-content:center}.login-form-container[_ngcontent-%COMP%]{max-width:100%;padding:30px}.login-form-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:24px}.social-login[_ngcontent-%COMP%]{gap:10px}.social-login[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:40px;height:40px;font-size:16px}}@media (max-width: 480px){.login-container[_ngcontent-%COMP%]{padding:10px}.login-form-container[_ngcontent-%COMP%]{padding:25px}.login-form-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:22px}.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:12px 14px}.login-btn[_ngcontent-%COMP%]{padding:12px 20px}}\"]\n    });\n  }\n  return SignupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}